##
## Personalization and aliases
##

export EDITOR=vim

alias hack='docker run --net=host -t -i kali-full /bin/bash'

##
## PS1 with git branch and hints
##

RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
TEAL='\033[1;36m'
YELLOW='\033[1;33m'
NC='\033[0m'

function git_branch {
	echo -n $(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ \1/")
}

function git_untracked {
	if [[ $(git status 2>/dev/null | grep 'Untracked files:') == 'Untracked files:' ]]
		then
			echo -n -e "${YELLOW}+${NC}"
	fi
}

function git_unstaged {
	if [[ $(git status 2>/dev/null | grep 'Changes not staged for commit:') == 'Changes not staged for commit:' ]]
		then
			echo -n -e "${RED}*${NC}"
	fi
}

function git_staging {
	if [[ $(git status 2>/dev/null | grep 'Changes to be committed:') == 'Changes to be committed:' ]]
		then
			echo -n -e "${TEAL}~${NC}"
	fi
}

function git_commit_distance {
	if [[ $(git status 2> /dev/null | head -n2 | tail -n1 | cut -d ' ' -f 4) != "up-to-date" ]]
		then
			echo -n " "
			echo -e -n $(git status 2> /dev/null | head -n2 | tail -n1 | grep -o '[0-9]\+')
			[[ $(git status 2> /dev/null | head -n2 | tail -n1 | cut -d ' ' -f 4) == "ahead" ]] && echo -e -n "${GREEN}▲${CYAN}"
			[[ $(git status 2> /dev/null | head -n2 | tail -n1 | cut -d ' ' -f 4) == "behind" ]] && echo -e -n "${RED}▼${CYAN}"
	fi
}

function git_stuff {
	git_branch
	git_untracked
	git_unstaged
	git_staging
	git_commit_distance
	echo
}

PS1='\[\033[1;35m\]\u@\h \[\033[1;34m\]\w\[\033[0m\]\[\033[0;36m\] ($(git_stuff)\[\033[0;36m\]) \[\033[1;34m\]$\[\033[0m\] '


##
## Programming languages
##

# Go

export GOPATH=$HOME/Development/Go
export PATH=$PATH:$GOPATH/bin


# Ruby

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
